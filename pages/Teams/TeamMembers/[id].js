import React, { useState, useEffect } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import Navbar from "../../../components/Navbar";
import Sidebar from "../../../components/Sidebar";
import KanbanContent from "../../../components/KanbanContent";
import RightSidebar from "../../../components/RightSidebar";
import RhService from "../../../services/RhService";
import axios from "axios";
import UserRow from "../../../components/UserRow";
import {
  PencilAltIcon,
  TrashIcon,
  ExternalLinkIcon,
  CheckCircleIcon,
  LockClosedIcon,
  LockOpenIcon,
  ArrowRightIcon,
  ArrowLeftIcon,
  UserIcon,
} from "@heroicons/react/solid";
import Link from "next/link";

function TeamMembers({ _id }) {
  const router = useRouter();
  const { id } = router.query;
  let filtredTeams = [];
  const [name, setName] = useState("");
  const [teamLeader, setTeamLeader] = useState({});

  const [teams, setTeams] = useState([]);
  useEffect(() => {
    getAll();
  }, []);

  const getAll = () => {
    const config = {
      method: "GET",
      url: `http://localhost:5000/sections/${id}`,
      //   headers: {
      //     Authorization: `Bearer ${token}`,
      //   },
    };
    axios(config)
      .then(({ status, data }) => {
        if (status === 200) {
          setTeams(data.data.employees);
          setName(data.data.name);
          setTeamLeader(data.data.teamLeader);
        }
      })
      .catch((err) => {
        console.error("err", err);
      });
  };
  return (
    <div className="flex">
      <Head>
        <title>PFE</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&family=Poppins:wght@300;400;500;600;700&display=swap"
          rel="stylesheet"
        ></link>
      </Head>
      <Sidebar />
      <div className="bg-myColors-100 h-screen w-7/12 relative">
        <Navbar navBarTitle_1="Teams" navBarTitle_2={name} />
        <div className="bg-myColors-200 rounded-2xl w-7/12 fixed top-[82px] my-8 bottom-0 p-8 text-white scrollbar scrollbar-thumb-hidden scrollbar-track-hidden">
          <div className="px-8 absolute top-[0px] pt-6 left-0 right-0 rounded-2xl bg-myColors-200">
            <div className="flex text-white">
              <h4 className="w-5/12 pl-6">Name</h4>
              <h4 className="w-5/12">Designation</h4>
              <h4 className="w-2/12 pl-6">Actions</h4>
            </div>
            <div className="h-[1px] w-full bg-white"></div>
          </div>
          <div className="pt-8">
            <div className="flex-col space-y-2 pt-2">
              {teams?.map(
                (
                  {
                    id,
                    _id,
                    firstname,
                    lastname,
                    date_of_birth,
                    gender,
                    role,
                    email,
                    location,
                    designation,
                    image,
                  },
                  i
                ) => (
                  <div key={_id}>
                    <div
                      className="flex items-center text-xs bg-myColors-300 hover:bg-myColors-400 py-1 rounded-xl"
                      key={_id}
                    >
                      <div className="w-5/12 flex items-center space-x-2 pl-6">
                        <UserIcon className="h-7 w-7 rounded-full bg-green-500 p-1" />
                        <h4 className="">
                          {firstname} {lastname}
                        </h4>
                      </div>
                      <div className="w-5/12 flex items-center space-x-2">
                        <h4 className="">{designation}</h4>
                      </div>
                      <div className="w-2/12 flex">
                        <Link href={"/Users/ProfileUser/" + _id} key={_id}>
                          <div className="relative group">
                            <a>
                              <ExternalLinkIcon className="h-9 w-9 hover:bg-myColors-200 text-yellow-500 p-2 rounded-xl cursor-pointer" />
                            </a>
                            <p className="hidden text-xs z-50 mt-2 group-hover:block absolute bg-white text-myColors-100 px-2 rounded">
                              Profile!
                            </p>
                          </div>
                        </Link>
                        <Link href={"/Users/UpdateUser/" + _id} key={_id}>
                          <div className="relative group">
                            <a>
                              <PencilAltIcon className="h-9 w-9 hover:bg-myColors-200 text-blue-500 p-2 rounded-xl cursor-pointer" />
                            </a>
                            <p className="hidden text-xs z-50 mt-2 group-hover:block absolute bg-white text-myColors-100 px-2 rounded">
                              Update!
                            </p>
                          </div>
                        </Link>
                        <div className="relative group">
                          <TrashIcon
                            className="h-9 w-9 hover:bg-myColors-200 text-red-500 p-2 rounded-xl cursor-pointer"
                            onClick={(e) => deleteRh(id)}
                          />
                          <p className="hidden text-xs z-50 mt-2 group-hover:block absolute bg-white text-myColors-100 px-2 rounded">
                            Delete!
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                )
              )}
            </div>
          </div>
        </div>
      </div>
      <RightSidebar />
    </div>
  );
}

export default TeamMembers;
